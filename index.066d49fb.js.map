{"mappings":"AACA,MAAMA,EAAQC,SAASC,cAAc,sBAC/BC,EAAMF,SAASC,cAAc,0BAC7BE,EAAOH,SAASC,cAAc,gBACpCG,QAAQC,IAAIN,GAEZ,IAAIO,EAAQ,GAEZ,MAAMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAkBNZ,EAAMa,iBAAiB,SAASC,IAC9BT,QAAQC,IAAIQ,EAAMC,cAAcC,OAChCT,EAAQO,EAAMC,cAAcC,KAAK,IAGnCb,EAAIU,iBAAiB,SAASC,IAC5BA,EAAMG,iBApBRC,iBACE,OAAOC,MACL,mDAAmDZ,8CACnDC,GACAY,MAAKC,IACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MAAI,GAExB,CAWEC,GACGN,MAAKC,GAKV,SAAqBA,GACnBhB,QAAQC,IAAIe,EAASM,SACrB,MAAMC,EAAS,IAAIP,EAASM,SACzBE,KAAI,EAACC,GAAEA,EAAEC,YAAEA,EAAWC,eAAEA,EAAcC,UAAEA,EAASC,aAAEA,MAClD,MAAO,WAAWJ,qHAE6BC,uBACrCI,EAAWH,yBAgC3B,SAAmBI,GACjB,MAAMC,EAAgB,GAQtB,GAPAC,EAAOT,KAAIU,IACT,IAAK,MAAMT,KAAMM,EACXG,EAAMT,KAAOA,GACfO,EAAcG,KAAKD,EAAME,KAAI,IAI/BJ,EAAcK,QAAU,EAAG,CAE7B,OADoBL,EAAcM,MAAM,EAAG,GAAGC,OAAO,SAASC,KAAK,KAErE,CACE,MAAO,OAEX,CA9CeC,CAAUb,QAgDDc,EAhDgCb,EAiD/Ca,EAAKC,MAAM,KAAK,oCADzB,IAAwBD,CA9CZ,IAEPF,KAAK,IACRzC,EAAK6C,UAAYrB,CACnB,CAnBsBsB,CAAY7B,KAC7B8B,OAAMC,GAAS/C,QAAQC,IAAI8C,IAAA,IAqBhC,MAAMd,EAAS,CACb,CAAER,GAAI,GAAIW,KAAM,UAChB,CAAEX,GAAI,GAAIW,KAAM,aAChB,CAAEX,GAAI,GAAIW,KAAM,aAChB,CAAEX,GAAI,GAAIW,KAAM,UAChB,CAAEX,GAAI,GAAIW,KAAM,SAChB,CAAEX,GAAI,GAAIW,KAAM,eAChB,CAAEX,GAAI,GAAIW,KAAM,SAChB,CAAEX,GAAI,MAAOW,KAAM,UACnB,CAAEX,GAAI,GAAIW,KAAM,WAChB,CAAEX,GAAI,GAAIW,KAAM,WAChB,CAAEX,GAAI,GAAIW,KAAM,UAChB,CAAEX,GAAI,MAAOW,KAAM,SACnB,CAAEX,GAAI,KAAMW,KAAM,WAClB,CAAEX,GAAI,MAAOW,KAAM,WACnB,CAAEX,GAAI,IAAKW,KAAM,mBACjB,CAAEX,GAAI,MAAOW,KAAM,YACnB,CAAEX,GAAI,GAAIW,KAAM,YAChB,CAAEX,GAAI,MAAOW,KAAM,OACnB,CAAEX,GAAI,GAAIW,KAAM,YAyBlB,IAAIN,EAAakB,GACXA,EAAMX,OAAS,GACVW,EAAMV,MAAM,EAAG,IAAIC,OAAO,OAE5BS","sources":["src/js/renderFilms.js"],"sourcesContent":["//-------- variables -------------\nconst input = document.querySelector('[name=searchQuery]');\nconst btn = document.querySelector('.header__search-button');\nconst grid = document.querySelector('.films__grid');\nconsole.log(input);\nconst API_KEY = '2b6c5a30539b25d64c2f30ee757140aa';\nlet title = '';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmZmEwYTgwNDZiYWRmMDlmOGM2MWVhOWMwNjFkMjc1ZCIsInN1YiI6IjY1MGM0MDg4NDRlYTU0MDBjNjMxZDVjMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.QCvrUYw290qbZ5ir3M1mVaFysI8g2yCPJXwVdcerhR4',\n  },\n};\n//-------------------MOVIES FETCH----------------\nasync function fetcher() {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${title}&include_adult=false&language=en-US&page=1`,\n    options,\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\n//-------------------- EVENT LISTENERS -----------------\n\ninput.addEventListener('input', event => {\n  console.log(event.currentTarget.value);\n  title = event.currentTarget.value;\n});\n\nbtn.addEventListener('click', event => {\n  event.preventDefault();\n  fetcher()\n    .then(response => renderFilms(response))\n    .catch(error => console.log(error));\n});\n\n//-------------- RENDER MOVIES GRID --------------\nfunction renderFilms(response) {\n  console.log(response.results);\n  const markup = [...response.results]\n    .map(({ id, poster_path, original_title, genre_ids, release_date }) => {\n      return `<li id=\"${id}\" class=\"films__grid-item\">\n        <a class=\"films__link\">\n          <img src=\"https://image.tmdb.org/t/p/w500${poster_path}\"/>\n          <h2>${shortTitle(original_title)}</h2>\n          <p>${getGenres(genre_ids)} | ${getReleaseDate(release_date)}</p>\n        </a>\n      </li>`;\n    })\n    .join('');\n  grid.innerHTML = markup;\n}\n\n//------------- GET GENRES ----------------\nconst genres = [\n  { id: 28, name: 'Action' },\n  { id: 12, name: 'Adventure' },\n  { id: 16, name: 'Animation' },\n  { id: 35, name: 'Comedy' },\n  { id: 80, name: 'Crime' },\n  { id: 99, name: 'Documentary' },\n  { id: 18, name: 'Drama' },\n  { id: 10751, name: 'Family' },\n  { id: 14, name: 'Fantasy' },\n  { id: 36, name: 'History' },\n  { id: 27, name: 'Horror' },\n  { id: 10402, name: 'Music' },\n  { id: 9648, name: 'Mystery' },\n  { id: 10749, name: 'Romance' },\n  { id: 878, name: 'Science Fiction' },\n  { id: 10770, name: 'TV Movie' },\n  { id: 53, name: 'Thriller' },\n  { id: 10752, name: 'War' },\n  { id: 37, name: 'Western' },\n];\n\nfunction getGenres(genreIds) {\n  const newGenreArray = [];\n  genres.map(genre => {\n    for (const id of genreIds) {\n      if (genre.id === id) {\n        newGenreArray.push(genre.name);\n      }\n    }\n  });\n  if (newGenreArray.length >= 3) {\n    const shortGenres = newGenreArray.slice(0, 3).concat('Other').join(', ');\n    return shortGenres;\n  } else {\n    return 'Other';\n  }\n}\n//----------- GET MOVIE RELEASE YEAR ---------------\nfunction getReleaseDate(date) {\n  return date.split('-')[0];\n}\n\n//---------- GET SHORTING TITLE --------------\nlet shortTitle = title => {\n  if (title.length > 30) {\n    return title.slice(0, 30).concat('...');\n  }\n  return title;\n};\n"],"names":["$eb59aa5f13496a3b$var$input","document","querySelector","$eb59aa5f13496a3b$var$btn","$eb59aa5f13496a3b$var$grid","console","log","$eb59aa5f13496a3b$var$title","$eb59aa5f13496a3b$var$options","method","headers","accept","Authorization","addEventListener","event","currentTarget","value","preventDefault","async","fetch","then","response","ok","Error","status","json","$eb59aa5f13496a3b$var$fetcher","results","markup","map","id","poster_path","original_title","genre_ids","release_date","$eb59aa5f13496a3b$var$shortTitle","genreIds","newGenreArray","$eb59aa5f13496a3b$var$genres","genre","push","name","length","slice","concat","join","$eb59aa5f13496a3b$var$getGenres","date","split","innerHTML","$eb59aa5f13496a3b$var$renderFilms","catch","error","title"],"version":3,"file":"index.066d49fb.js.map"}